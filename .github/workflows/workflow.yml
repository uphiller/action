name: Build and Push Docker Image
on:
  push:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  DOCKER_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_EB_APPLICATION_NAME: ${{ secrets.AWS_EB_APPLICATION_NAME }}
  AWS_EB_APPLICATION_ENV_NAME: ${{ secrets.AWS_EB_APPLICATION_ENV_NAME }}
  LATEST_IMAGE_TAG: latest
  PAST_IMAGE_TAG: past

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew clean build

#      - name: Set up AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}

#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#
#      - name: Build, tag, and push image to Docker HubK
#        id: build-image
#        run: |
#          docker pull $DOCKER_REPOSITORY:$LATEST_IMAGE_TAG
#          docker tag $DOCKER_REPOSITORY:$LATEST_IMAGE_TAG $DOCKER_REPOSITORY:$PAST_IMAGE_TAG
#          docker push $DOCKER_REPOSITORY:$PAST_IMAGE_TAG
#          docker build -t $DOCKER_REPOSITORY:$LATEST_IMAGE_TAG .
#          docker push $DOCKER_REPOSITORY:$LATEST_IMAGE_TAG

#      - name: Create ZIP archive with Dockerrun.aws.json
#        run: |
#          echo '{"AWSEBDockerrunVersion": "1", "Image": {"Name": "uphiller/action:latest"}}' > Dockerrun.aws.json
#          zip -r your-docker-image-name.zip Dockerrun.aws.json

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_EB_APPLICATION_ENV_NAME }}
          region: ${{ secrets.AWS_REGION }}
          version_label: 12345
          deployment_package: Dockerrun.aws.json

#      - name: Deploy to Elastic Beanstalk
#        run: |
#          aws elasticbeanstalk create-application-version \
#            --application-name $AWS_EB_APPLICATION_NAME \
#            --version-label your-version-label \
#            --source-bundle S3Bucket=elasticbeanstalk-ap-northeast-2-839850511691,S3Key=your-docker-image-name.zip
#
#          aws elasticbeanstalk update-environment \
#            --environment-name $AWS_EB_APPLICATION_ENV_NAME \
#            --version-label your-version-label